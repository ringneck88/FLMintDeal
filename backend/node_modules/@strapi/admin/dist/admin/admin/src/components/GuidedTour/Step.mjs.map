{"version":3,"file":"Step.mjs","sources":["../../../../../../admin/src/components/GuidedTour/Step.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Popover,\n  Box,\n  Flex,\n  Button,\n  Typography,\n  LinkButton,\n  FlexProps,\n} from '@strapi/design-system';\nimport { FormattedMessage, type MessageDescriptor } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useTracking } from '../../features/Tracking';\n\nimport { useGuidedTour, type ValidTourName } from './Context';\n\n/* -------------------------------------------------------------------------------------------------\n * Step factory\n * -----------------------------------------------------------------------------------------------*/\n\ntype WithChildren = {\n  children: React.ReactNode;\n  id?: never;\n  defaultMessage?: never;\n};\n\ntype WithIntl = {\n  children?: undefined;\n  id: MessageDescriptor['id'];\n  defaultMessage: MessageDescriptor['defaultMessage'];\n  withArrow?: boolean;\n};\n\ntype WithActionsChildren = {\n  children: React.ReactNode;\n  showStepCount?: boolean;\n  showSkip?: boolean;\n};\n\ntype WithActionsProps = {\n  children?: undefined;\n  showStepCount?: boolean;\n  showSkip?: boolean;\n};\n\ntype StepProps = WithChildren | WithIntl;\ntype ActionsProps = WithActionsChildren | WithActionsProps;\n\ntype Step = {\n  Root: React.ForwardRefExoticComponent<\n    React.ComponentProps<typeof Popover.Content> & { withArrow?: boolean }\n  >;\n  Title: (props: StepProps) => React.ReactNode;\n  Content: (props: StepProps) => React.ReactNode;\n  Actions: (props: ActionsProps & { to?: string } & FlexProps) => React.ReactNode;\n};\n\nconst ActionsContainer = styled(Flex)`\n  border-top: ${({ theme }) => `1px solid ${theme.colors.neutral150}`};\n`;\n\n/**\n * TODO:\n * We should probably move all arrow styles + svg to the DS\n */\nconst PopoverArrow = styled(Popover.Arrow)`\n  fill: ${({ theme }) => theme.colors.neutral0};\n  transform: translateY(-16px) rotate(-90deg);\n`;\n\nexport const StepCount = ({ tourName }: { tourName: ValidTourName }) => {\n  const state = useGuidedTour('GuidedTourPopover', (s) => s.state);\n  const currentStep = state.tours[tourName].currentStep + 1;\n  // TODO: Currently all tours do not count their last step, but we should find a way to make this more smart\n  const displayedLength = state.tours[tourName].length - 1;\n\n  return (\n    <Typography variant=\"omega\" fontSize=\"12px\">\n      <FormattedMessage\n        id=\"tours.stepCount\"\n        defaultMessage=\"Step {currentStep} of {tourLength}\"\n        values={{ currentStep, tourLength: displayedLength }}\n      />\n    </Typography>\n  );\n};\n\nconst createStepComponents = (tourName: ValidTourName): Step => ({\n  Root: React.forwardRef(({ withArrow = true, ...props }, ref) => {\n    return (\n      <Popover.Content\n        ref={ref}\n        aria-labelledby=\"guided-tour-title\"\n        side=\"top\"\n        align=\"center\"\n        style={{ border: 'none' }}\n        {...props}\n      >\n        {withArrow && (\n          <PopoverArrow asChild>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"23\"\n              height=\"25\"\n              viewBox=\"0 0 23 25\"\n              fill=\"none\"\n            >\n              <path d=\"M11 24.5L1.82843 15.3284C0.266332 13.7663 0.26633 11.2337 1.82843 9.67157L11 0.5L23 12.5L11 24.5Z\" />\n            </svg>\n          </PopoverArrow>\n        )}\n        <Flex width=\"360px\" direction=\"column\" alignItems=\"start\">\n          {props.children}\n        </Flex>\n      </Popover.Content>\n    );\n  }),\n\n  Title: (props) => {\n    return (\n      <Box paddingTop={5} paddingLeft={5} paddingRight={5} paddingBottom={1} width=\"100%\">\n        {'children' in props ? (\n          props.children\n        ) : (\n          <Typography tag=\"h1\" id=\"guided-tour-title\" variant=\"omega\" fontWeight=\"bold\">\n            <FormattedMessage id={props.id} defaultMessage={props.defaultMessage} />\n          </Typography>\n        )}\n      </Box>\n    );\n  },\n\n  Content: (props) => (\n    <Box paddingBottom={5} paddingLeft={5} paddingRight={5} width=\"100%\">\n      {'children' in props ? (\n        props.children\n      ) : (\n        <Typography tag=\"div\" variant=\"omega\">\n          <FormattedMessage id={props.id} defaultMessage={props.defaultMessage} />\n        </Typography>\n      )}\n    </Box>\n  ),\n\n  Actions: ({ showStepCount = true, showSkip = false, to, children, ...flexProps }) => {\n    const { trackUsage } = useTracking();\n    const dispatch = useGuidedTour('GuidedTourPopover', (s) => s.dispatch);\n    const state = useGuidedTour('GuidedTourPopover', (s) => s.state);\n    const currentStep = state.tours[tourName].currentStep + 1;\n    const actualTourLength = state.tours[tourName].length;\n\n    const handleSkipAction = () => {\n      trackUsage('didSkipGuidedTour', { name: tourName });\n      dispatch({ type: 'skip_tour', payload: tourName });\n    };\n\n    const handleNextStep = () => {\n      if (currentStep === actualTourLength) {\n        trackUsage('didCompleteGuidedTour', { name: tourName });\n      }\n      dispatch({ type: 'next_step', payload: tourName });\n    };\n\n    return (\n      <ActionsContainer\n        width=\"100%\"\n        padding={3}\n        paddingLeft={5}\n        justifyContent={showStepCount ? 'space-between' : 'flex-end'}\n        {...flexProps}\n      >\n        {children ? (\n          children\n        ) : (\n          <>\n            {showStepCount && <StepCount tourName={tourName} />}\n            <Flex gap={2}>\n              {showSkip && (\n                <Button variant=\"tertiary\" onClick={handleSkipAction}>\n                  <FormattedMessage id=\"tours.skip\" defaultMessage=\"Skip\" />\n                </Button>\n              )}\n              {to ? (\n                <LinkButton tag={NavLink} to={to} onClick={handleNextStep}>\n                  <FormattedMessage id=\"tours.next\" defaultMessage=\"Next\" />\n                </LinkButton>\n              ) : (\n                <Button onClick={handleNextStep}>\n                  <FormattedMessage id=\"tours.next\" defaultMessage=\"Next\" />\n                </Button>\n              )}\n            </Flex>\n          </>\n        )}\n      </ActionsContainer>\n    );\n  },\n});\n\nexport type { Step };\nexport { createStepComponents };\n"],"names":["ActionsContainer","styled","Flex","theme","colors","neutral150","PopoverArrow","Popover","Arrow","neutral0","StepCount","tourName","state","useGuidedTour","s","currentStep","tours","displayedLength","length","_jsx","Typography","variant","fontSize","FormattedMessage","id","defaultMessage","values","tourLength","createStepComponents","Root","React","forwardRef","withArrow","props","ref","_jsxs","Content","aria-labelledby","side","align","style","border","asChild","svg","xmlns","width","height","viewBox","fill","path","d","direction","alignItems","children","Title","Box","paddingTop","paddingLeft","paddingRight","paddingBottom","tag","fontWeight","Actions","showStepCount","showSkip","to","flexProps","trackUsage","useTracking","dispatch","actualTourLength","handleSkipAction","name","type","payload","handleNextStep","padding","justifyContent","_Fragment","gap","Button","onClick","LinkButton","NavLink"],"mappings":"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"}