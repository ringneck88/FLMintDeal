{"version":3,"file":"time.mjs","sources":["../../../../../server/src/services/internals/scalars/time.ts"],"sourcesContent":["import { GraphQLScalarType, Kind } from 'graphql';\nimport { parseType, errors } from '@strapi/utils';\n\nconst { ValidationError } = errors;\n\n/**\n * A GraphQL scalar used to store Time (HH:mm:ss.SSS) values\n * @type {GraphQLScalarType}\n */\nconst TimeScalar = new GraphQLScalarType({\n  name: 'Time',\n\n  description: 'A time string with format HH:mm:ss.SSS',\n\n  serialize(value) {\n    return parseType({ type: 'time', value });\n  },\n\n  parseValue(value) {\n    return parseType({ type: 'time', value });\n  },\n\n  parseLiteral(ast) {\n    if (ast.kind !== Kind.STRING) {\n      throw new ValidationError('Time cannot represent non string type');\n    }\n\n    const { value } = ast;\n\n    return parseType({ type: 'time', value });\n  },\n});\n\nexport default TimeScalar;\n"],"names":["ValidationError","errors","TimeScalar","GraphQLScalarType","name","description","serialize","value","parseType","type","parseValue","parseLiteral","ast","kind","Kind","STRING"],"mappings":";;;AAGA,MAAM,EAAEA,eAAe,EAAE,GAAGC,MAAAA;AAE5B;;;IAIA,MAAMC,UAAa,GAAA,IAAIC,iBAAkB,CAAA;IACvCC,IAAM,EAAA,MAAA;IAENC,WAAa,EAAA,wCAAA;AAEbC,IAAAA,SAAAA,CAAAA,CAAUC,KAAK,EAAA;AACb,QAAA,OAAOC,SAAU,CAAA;YAAEC,IAAM,EAAA,MAAA;AAAQF,YAAAA;AAAM,SAAA,CAAA;AACzC,KAAA;AAEAG,IAAAA,UAAAA,CAAAA,CAAWH,KAAK,EAAA;AACd,QAAA,OAAOC,SAAU,CAAA;YAAEC,IAAM,EAAA,MAAA;AAAQF,YAAAA;AAAM,SAAA,CAAA;AACzC,KAAA;AAEAI,IAAAA,YAAAA,CAAAA,CAAaC,GAAG,EAAA;AACd,QAAA,IAAIA,GAAIC,CAAAA,IAAI,KAAKC,IAAAA,CAAKC,MAAM,EAAE;AAC5B,YAAA,MAAM,IAAIf,eAAgB,CAAA,uCAAA,CAAA;AAC5B;QAEA,MAAM,EAAEO,KAAK,EAAE,GAAGK,GAAAA;AAElB,QAAA,OAAOJ,SAAU,CAAA;YAAEC,IAAM,EAAA,MAAA;AAAQF,YAAAA;AAAM,SAAA,CAAA;AACzC;AACF,CAAA;;;;"}