{"version":3,"file":"extension.js","sources":["../../../../server/src/services/extension/extension.ts"],"sourcesContent":["import * as nexus from 'nexus';\nimport { merge } from 'lodash/fp';\nimport type { Core } from '@strapi/types';\nimport type * as Nexus from 'nexus';\n\nimport createShadowCRUDManager from './shadow-crud-manager';\n\nexport type Configuration = {\n  types?: NexusGen[];\n  typeDefs?: string;\n  resolvers?: object;\n  resolversConfig?: object;\n  plugins?: Nexus.PluginConfig[];\n};\n\nexport type ConfigurationFactory = (options: {\n  strapi: Core.Strapi;\n  nexus: typeof nexus;\n  typeRegistry: object;\n}) => Configuration;\n\nexport type Extension = {\n  types: NexusGen[];\n  typeDefs: string[];\n  resolvers: object;\n  resolversConfig: object;\n  plugins: Nexus.PluginConfig[];\n};\n\nconst getDefaultState = (): Extension => ({\n  types: [],\n  typeDefs: [],\n  resolvers: {},\n  resolversConfig: {},\n  plugins: [],\n});\n\nconst createExtension = ({ strapi }: { strapi: Core.Strapi }) => {\n  const configs: Array<Configuration | ConfigurationFactory> = [];\n\n  return {\n    shadowCRUD: createShadowCRUDManager(),\n\n    /**\n     * Register a new extension configuration\n     */\n    use(configuration: Configuration | ConfigurationFactory) {\n      configs.push(configuration);\n\n      return this;\n    },\n\n    /**\n     * Convert the registered configuration into a single extension object & return it\n     */\n    generate({ typeRegistry }: { typeRegistry: object }) {\n      const resolveConfig = (config: Configuration | ConfigurationFactory): Configuration => {\n        return typeof config === 'function' ? config({ strapi, nexus, typeRegistry }) : config;\n      };\n\n      // Evaluate & merge every registered configuration object, then return the result\n      return configs.reduce((acc, configuration) => {\n        const { types, typeDefs, resolvers, resolversConfig, plugins } =\n          resolveConfig(configuration);\n\n        // Register type definitions\n        if (typeof typeDefs === 'string') {\n          acc.typeDefs.push(typeDefs);\n        }\n\n        // Register nexus types\n        if (Array.isArray(types)) {\n          acc.types.push(...types);\n        }\n\n        // Register nexus plugins\n        if (Array.isArray(plugins)) {\n          acc.plugins.push(...plugins);\n        }\n\n        // Register resolvers\n        if (typeof resolvers === 'object') {\n          acc.resolvers = merge(acc.resolvers, resolvers);\n        }\n\n        // Register resolvers configuration\n        if (typeof resolversConfig === 'object') {\n          // TODO: smarter merge for auth, middlewares & policies\n          acc.resolversConfig = merge(resolversConfig, acc.resolversConfig);\n        }\n\n        return acc;\n      }, getDefaultState());\n    },\n  };\n};\n\nexport default createExtension;\n"],"names":["getDefaultState","types","typeDefs","resolvers","resolversConfig","plugins","createExtension","strapi","configs","shadowCRUD","createShadowCRUDManager","use","configuration","push","generate","typeRegistry","resolveConfig","config","nexus","reduce","acc","Array","isArray","merge"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,MAAMA,eAAAA,GAAkB,KAAkB;AACxCC,QAAAA,KAAAA,EAAO,EAAE;AACTC,QAAAA,QAAAA,EAAU,EAAE;AACZC,QAAAA,SAAAA,EAAW,EAAC;AACZC,QAAAA,eAAAA,EAAiB,EAAC;AAClBC,QAAAA,OAAAA,EAAS;KACX,CAAA;AAEA,MAAMC,eAAkB,GAAA,CAAC,EAAEC,MAAM,EAA2B,GAAA;AAC1D,IAAA,MAAMC,UAAuD,EAAE;IAE/D,OAAO;QACLC,UAAYC,EAAAA,iBAAAA,EAAAA;AAEZ;;AAEC,QACDC,KAAIC,aAAmD,EAAA;AACrDJ,YAAAA,OAAAA,CAAQK,IAAI,CAACD,aAAAA,CAAAA;AAEb,YAAA,OAAO,IAAI;AACb,SAAA;AAEA;;QAGAE,QAAAA,CAAAA,CAAS,EAAEC,YAAY,EAA4B,EAAA;AACjD,YAAA,MAAMC,gBAAgB,CAACC,MAAAA,GAAAA;gBACrB,OAAO,OAAOA,MAAW,KAAA,UAAA,GAAaA,MAAO,CAAA;AAAEV,oBAAAA,MAAAA;AAAQW,2BAAAA,gBAAAA;AAAOH,oBAAAA;iBAAkBE,CAAAA,GAAAA,MAAAA;AAClF,aAAA;;AAGA,YAAA,OAAOT,OAAQW,CAAAA,MAAM,CAAC,CAACC,GAAKR,EAAAA,aAAAA,GAAAA;AAC1B,gBAAA,MAAM,EAAEX,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,OAAO,EAAE,GAC5DW,aAAcJ,CAAAA,aAAAA,CAAAA;;gBAGhB,IAAI,OAAOV,aAAa,QAAU,EAAA;oBAChCkB,GAAIlB,CAAAA,QAAQ,CAACW,IAAI,CAACX,QAAAA,CAAAA;AACpB;;gBAGA,IAAImB,KAAAA,CAAMC,OAAO,CAACrB,KAAQ,CAAA,EAAA;oBACxBmB,GAAInB,CAAAA,KAAK,CAACY,IAAI,CAAIZ,GAAAA,KAAAA,CAAAA;AACpB;;gBAGA,IAAIoB,KAAAA,CAAMC,OAAO,CAACjB,OAAU,CAAA,EAAA;oBAC1Be,GAAIf,CAAAA,OAAO,CAACQ,IAAI,CAAIR,GAAAA,OAAAA,CAAAA;AACtB;;gBAGA,IAAI,OAAOF,cAAc,QAAU,EAAA;AACjCiB,oBAAAA,GAAAA,CAAIjB,SAAS,GAAGoB,QAAMH,CAAAA,GAAAA,CAAIjB,SAAS,EAAEA,SAAAA,CAAAA;AACvC;;gBAGA,IAAI,OAAOC,oBAAoB,QAAU,EAAA;;AAEvCgB,oBAAAA,GAAAA,CAAIhB,eAAe,GAAGmB,QAAMnB,CAAAA,eAAAA,EAAiBgB,IAAIhB,eAAe,CAAA;AAClE;gBAEA,OAAOgB,GAAAA;aACNpB,EAAAA,eAAAA,EAAAA,CAAAA;AACL;AACF,KAAA;AACF;;;;"}