{"version":3,"file":"constants.js","sources":["../../../server/src/services/constants.ts"],"sourcesContent":["const PAGINATION_TYPE_NAME = 'Pagination';\nconst DELETE_MUTATION_RESPONSE_TYPE_NAME = 'DeleteMutationResponse';\nconst PUBLICATION_STATUS_TYPE_NAME = 'PublicationStatus';\nconst ERROR_TYPE_NAME = 'Error';\n\nconst RESPONSE_COLLECTION_META_TYPE_NAME = 'ResponseCollectionMeta';\n\nconst GRAPHQL_SCALARS = [\n  'ID',\n  'Boolean',\n  'Int',\n  'String',\n  'Long',\n  'Float',\n  'JSON',\n  'Date',\n  'Time',\n  'DateTime',\n] as const;\n\nconst STRAPI_SCALARS = [\n  'boolean',\n  'integer',\n  'string',\n  'richtext',\n  'blocks',\n  'enumeration',\n  'biginteger',\n  'float',\n  'decimal',\n  'json',\n  'date',\n  'time',\n  'datetime',\n  'timestamp',\n  'uid',\n  'email',\n  'password',\n  'text',\n] as const;\n\nconst SCALARS_ASSOCIATIONS = {\n  uid: 'String',\n  email: 'String',\n  password: 'String',\n  text: 'String',\n  boolean: 'Boolean',\n  integer: 'Int',\n  string: 'String',\n  enumeration: 'String',\n  richtext: 'String',\n  blocks: 'JSON',\n  biginteger: 'Long',\n  float: 'Float',\n  decimal: 'Float',\n  json: 'JSON',\n  date: 'Date',\n  time: 'Time',\n  datetime: 'DateTime',\n  timestamp: 'DateTime',\n} as const;\n\nconst GENERIC_MORPH_TYPENAME = 'GenericMorph';\n\nconst KINDS = {\n  type: 'type',\n  component: 'component',\n  dynamicZone: 'dynamic-zone',\n  enum: 'enum',\n  entity: 'entity',\n  entityResponse: 'entity-response',\n  entityResponseCollection: 'entity-response-collection',\n  relationResponseCollection: 'relation-response-collection',\n  query: 'query',\n  mutation: 'mutation',\n  input: 'input',\n  filtersInput: 'filters-input',\n  scalar: 'scalar',\n  morph: 'polymorphic',\n  internal: 'internal',\n} as const;\n\nconst allOperators = [\n  'and',\n  'or',\n  'not',\n\n  'eq',\n  'eqi',\n  'ne',\n  'nei',\n\n  'startsWith',\n  'endsWith',\n\n  'contains',\n  'notContains',\n\n  'containsi',\n  'notContainsi',\n\n  'gt',\n  'gte',\n\n  'lt',\n  'lte',\n\n  'null',\n  'notNull',\n\n  'in',\n  'notIn',\n\n  'between',\n] as const;\n\nconst GRAPHQL_SCALAR_OPERATORS = {\n  // ID\n  ID: allOperators,\n  // Booleans\n  Boolean: allOperators,\n  // Strings\n  String: allOperators,\n  // Numbers\n  Int: allOperators,\n  Long: allOperators,\n  Float: allOperators,\n  // Dates\n  Date: allOperators,\n  Time: allOperators,\n  DateTime: allOperators,\n  // Others\n  JSON: allOperators,\n} as const;\n\nconst ERROR_CODES = {\n  emptyDynamicZone: 'dynamiczone.empty',\n} as const;\n\nexport type Constants = {\n  PAGINATION_TYPE_NAME: string;\n  RESPONSE_COLLECTION_META_TYPE_NAME: string;\n  PUBLICATION_STATE_TYPE_NAME: string;\n  GRAPHQL_SCALARS: string[];\n  STRAPI_SCALARS: string[];\n  GENERIC_MORPH_TYPENAME: string;\n  KINDS: typeof KINDS;\n  GRAPHQL_SCALAR_OPERATORS: typeof GRAPHQL_SCALAR_OPERATORS;\n  SCALARS_ASSOCIATIONS: typeof SCALARS_ASSOCIATIONS;\n  ERROR_CODES: typeof ERROR_CODES;\n  ERROR_TYPE_NAME: string;\n};\n\nexport default () => ({\n  PAGINATION_TYPE_NAME,\n  RESPONSE_COLLECTION_META_TYPE_NAME,\n  DELETE_MUTATION_RESPONSE_TYPE_NAME,\n  PUBLICATION_STATUS_TYPE_NAME,\n  GRAPHQL_SCALARS,\n  STRAPI_SCALARS,\n  GENERIC_MORPH_TYPENAME,\n  KINDS,\n  GRAPHQL_SCALAR_OPERATORS,\n  SCALARS_ASSOCIATIONS,\n  ERROR_CODES,\n  ERROR_TYPE_NAME,\n});\n"],"names":["PAGINATION_TYPE_NAME","DELETE_MUTATION_RESPONSE_TYPE_NAME","PUBLICATION_STATUS_TYPE_NAME","ERROR_TYPE_NAME","RESPONSE_COLLECTION_META_TYPE_NAME","GRAPHQL_SCALARS","STRAPI_SCALARS","SCALARS_ASSOCIATIONS","uid","email","password","text","boolean","integer","string","enumeration","richtext","blocks","biginteger","float","decimal","json","date","time","datetime","timestamp","GENERIC_MORPH_TYPENAME","KINDS","type","component","dynamicZone","enum","entity","entityResponse","entityResponseCollection","relationResponseCollection","query","mutation","input","filtersInput","scalar","morph","internal","allOperators","GRAPHQL_SCALAR_OPERATORS","ID","Boolean","String","Int","Long","Float","Date","Time","DateTime","JSON","ERROR_CODES","emptyDynamicZone"],"mappings":";;AAAA,MAAMA,oBAAuB,GAAA,YAAA;AAC7B,MAAMC,kCAAqC,GAAA,wBAAA;AAC3C,MAAMC,4BAA+B,GAAA,mBAAA;AACrC,MAAMC,eAAkB,GAAA,OAAA;AAExB,MAAMC,kCAAqC,GAAA,wBAAA;AAE3C,MAAMC,eAAkB,GAAA;AACtB,IAAA,IAAA;AACA,IAAA,SAAA;AACA,IAAA,KAAA;AACA,IAAA,QAAA;AACA,IAAA,MAAA;AACA,IAAA,OAAA;AACA,IAAA,MAAA;AACA,IAAA,MAAA;AACA,IAAA,MAAA;AACA,IAAA;AACD,CAAA;AAED,MAAMC,cAAiB,GAAA;AACrB,IAAA,SAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA;AACA,IAAA,UAAA;AACA,IAAA,QAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA;AACA,IAAA,OAAA;AACA,IAAA,SAAA;AACA,IAAA,MAAA;AACA,IAAA,MAAA;AACA,IAAA,MAAA;AACA,IAAA,UAAA;AACA,IAAA,WAAA;AACA,IAAA,KAAA;AACA,IAAA,OAAA;AACA,IAAA,UAAA;AACA,IAAA;AACD,CAAA;AAED,MAAMC,oBAAuB,GAAA;IAC3BC,GAAK,EAAA,QAAA;IACLC,KAAO,EAAA,QAAA;IACPC,QAAU,EAAA,QAAA;IACVC,IAAM,EAAA,QAAA;IACNC,OAAS,EAAA,SAAA;IACTC,OAAS,EAAA,KAAA;IACTC,MAAQ,EAAA,QAAA;IACRC,WAAa,EAAA,QAAA;IACbC,QAAU,EAAA,QAAA;IACVC,MAAQ,EAAA,MAAA;IACRC,UAAY,EAAA,MAAA;IACZC,KAAO,EAAA,OAAA;IACPC,OAAS,EAAA,OAAA;IACTC,IAAM,EAAA,MAAA;IACNC,IAAM,EAAA,MAAA;IACNC,IAAM,EAAA,MAAA;IACNC,QAAU,EAAA,UAAA;IACVC,SAAW,EAAA;AACb,CAAA;AAEA,MAAMC,sBAAyB,GAAA,cAAA;AAE/B,MAAMC,KAAQ,GAAA;IACZC,IAAM,EAAA,MAAA;IACNC,SAAW,EAAA,WAAA;IACXC,WAAa,EAAA,cAAA;IACbC,IAAM,EAAA,MAAA;IACNC,MAAQ,EAAA,QAAA;IACRC,cAAgB,EAAA,iBAAA;IAChBC,wBAA0B,EAAA,4BAAA;IAC1BC,0BAA4B,EAAA,8BAAA;IAC5BC,KAAO,EAAA,OAAA;IACPC,QAAU,EAAA,UAAA;IACVC,KAAO,EAAA,OAAA;IACPC,YAAc,EAAA,eAAA;IACdC,MAAQ,EAAA,QAAA;IACRC,KAAO,EAAA,aAAA;IACPC,QAAU,EAAA;AACZ,CAAA;AAEA,MAAMC,YAAe,GAAA;AACnB,IAAA,KAAA;AACA,IAAA,IAAA;AACA,IAAA,KAAA;AAEA,IAAA,IAAA;AACA,IAAA,KAAA;AACA,IAAA,IAAA;AACA,IAAA,KAAA;AAEA,IAAA,YAAA;AACA,IAAA,UAAA;AAEA,IAAA,UAAA;AACA,IAAA,aAAA;AAEA,IAAA,WAAA;AACA,IAAA,cAAA;AAEA,IAAA,IAAA;AACA,IAAA,KAAA;AAEA,IAAA,IAAA;AACA,IAAA,KAAA;AAEA,IAAA,MAAA;AACA,IAAA,SAAA;AAEA,IAAA,IAAA;AACA,IAAA,OAAA;AAEA,IAAA;AACD,CAAA;AAED,MAAMC,wBAA2B,GAAA;;IAE/BC,EAAIF,EAAAA,YAAAA;;IAEJG,OAASH,EAAAA,YAAAA;;IAETI,MAAQJ,EAAAA,YAAAA;;IAERK,GAAKL,EAAAA,YAAAA;IACLM,IAAMN,EAAAA,YAAAA;IACNO,KAAOP,EAAAA,YAAAA;;IAEPQ,IAAMR,EAAAA,YAAAA;IACNS,IAAMT,EAAAA,YAAAA;IACNU,QAAUV,EAAAA,YAAAA;;IAEVW,IAAMX,EAAAA;AACR,CAAA;AAEA,MAAMY,WAAc,GAAA;IAClBC,gBAAkB,EAAA;AACpB,CAAA;AAgBA,gBAAe,CAAA,KAAO;AACpBxD,QAAAA,oBAAAA;AACAI,QAAAA,kCAAAA;AACAH,QAAAA,kCAAAA;AACAC,QAAAA,4BAAAA;AACAG,QAAAA,eAAAA;AACAC,QAAAA,cAAAA;AACAoB,QAAAA,sBAAAA;AACAC,QAAAA,KAAAA;AACAiB,QAAAA,wBAAAA;AACArC,QAAAA,oBAAAA;AACAgD,QAAAA,WAAAA;AACApD,QAAAA;AACF,KAAA,CAAC;;;;"}