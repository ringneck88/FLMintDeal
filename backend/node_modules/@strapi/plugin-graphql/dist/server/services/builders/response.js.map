{"version":3,"file":"response.js","sources":["../../../../server/src/services/builders/response.ts"],"sourcesContent":["import { objectType } from 'nexus';\nimport { prop } from 'lodash/fp';\nimport type { Schema } from '@strapi/types';\nimport type { Context } from '../types';\n\nexport default ({ strapi }: Context) => {\n  const { naming } = strapi.plugin('graphql').service('utils');\n\n  return {\n    /**\n     * Build a type definition for a content API response for a given content type\n     */\n    buildResponseDefinition(contentType: Schema.ContentType) {\n      const name = naming.getEntityResponseName(contentType);\n      const typeName = naming.getTypeName(contentType);\n\n      return objectType({\n        name,\n\n        definition(t) {\n          t.field('data', {\n            type: typeName,\n\n            resolve: prop('value'),\n          });\n        },\n      });\n    },\n  };\n};\n"],"names":["strapi","naming","plugin","service","buildResponseDefinition","contentType","name","getEntityResponseName","typeName","getTypeName","objectType","definition","t","field","type","resolve","prop"],"mappings":";;;;;AAKA,eAAe,CAAA,CAAC,EAAEA,MAAM,EAAW,GAAA;IACjC,MAAM,EAAEC,MAAM,EAAE,GAAGD,OAAOE,MAAM,CAAC,SAAWC,CAAAA,CAAAA,OAAO,CAAC,OAAA,CAAA;IAEpD,OAAO;AACL;;AAEC,QACDC,yBAAwBC,WAA+B,EAAA;YACrD,MAAMC,IAAAA,GAAOL,MAAOM,CAAAA,qBAAqB,CAACF,WAAAA,CAAAA;YAC1C,MAAMG,QAAAA,GAAWP,MAAOQ,CAAAA,WAAW,CAACJ,WAAAA,CAAAA;AAEpC,YAAA,OAAOK,gBAAW,CAAA;AAChBJ,gBAAAA,IAAAA;AAEAK,gBAAAA,UAAAA,CAAAA,CAAWC,CAAC,EAAA;oBACVA,CAAEC,CAAAA,KAAK,CAAC,MAAQ,EAAA;wBACdC,IAAMN,EAAAA,QAAAA;AAENO,wBAAAA,OAAAA,EAASC,OAAK,CAAA,OAAA;AAChB,qBAAA,CAAA;AACF;AACF,aAAA,CAAA;AACF;AACF,KAAA;AACF,CAAA;;;;"}