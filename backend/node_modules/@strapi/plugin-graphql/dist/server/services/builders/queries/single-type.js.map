{"version":3,"file":"single-type.js","sources":["../../../../../server/src/services/builders/queries/single-type.ts"],"sourcesContent":["import { extendType } from 'nexus';\nimport type * as Nexus from 'nexus';\nimport type { Struct } from '@strapi/types';\nimport type { Context } from '../../types';\n\nexport default ({ strapi }: Context) => {\n  const { service: getService } = strapi.plugin('graphql');\n\n  const { naming } = getService('utils');\n  const { transformArgs, getContentTypeArgs } = getService('builders').utils;\n\n  const { getFindOneQueryName, getTypeName } = naming;\n\n  const buildSingleTypeQueries = (contentType: Struct.SingleTypeSchema) => {\n    const findQueryName = `Query.${getFindOneQueryName(contentType)}`;\n\n    const extension = getService('extension');\n\n    const registerAuthConfig = (action: string, auth: any) => {\n      return extension.use({ resolversConfig: { [action]: { auth } } });\n    };\n\n    const isActionEnabled = (action: string) => {\n      return extension.shadowCRUD(contentType.uid).isActionEnabled(action);\n    };\n\n    const isFindEnabled = isActionEnabled('find');\n\n    if (isFindEnabled) {\n      registerAuthConfig(findQueryName, { scope: [`${contentType.uid}.find`] });\n    }\n\n    return extendType({\n      type: 'Query',\n\n      definition(t) {\n        if (isFindEnabled) {\n          addFindQuery(t, contentType);\n        }\n      },\n    });\n  };\n\n  const addFindQuery = (\n    t: Nexus.blocks.ObjectDefinitionBlock<string>,\n    contentType: Struct.SingleTypeSchema\n  ) => {\n    const findQueryName = getFindOneQueryName(contentType);\n    const typeName = getTypeName(contentType);\n\n    t.field(findQueryName, {\n      type: typeName,\n\n      extensions: {\n        strapi: {\n          contentType,\n        },\n      },\n\n      args: getContentTypeArgs(contentType),\n\n      async resolve(parent, args, ctx) {\n        const transformedArgs = transformArgs(args, { contentType });\n\n        const { findFirst } = getService('builders')\n          .get('content-api')\n          .buildQueriesResolvers({ contentType });\n\n        return findFirst(parent, transformedArgs, ctx);\n      },\n    });\n  };\n\n  return { buildSingleTypeQueries };\n};\n"],"names":["strapi","service","getService","plugin","naming","transformArgs","getContentTypeArgs","utils","getFindOneQueryName","getTypeName","buildSingleTypeQueries","contentType","findQueryName","extension","registerAuthConfig","action","auth","use","resolversConfig","isActionEnabled","shadowCRUD","uid","isFindEnabled","scope","extendType","type","definition","t","addFindQuery","typeName","field","extensions","args","resolve","parent","ctx","transformedArgs","findFirst","get","buildQueriesResolvers"],"mappings":";;;;AAKA,qCAAe,CAAA,CAAC,EAAEA,MAAM,EAAW,GAAA;AACjC,IAAA,MAAM,EAAEC,OAASC,EAAAA,UAAU,EAAE,GAAGF,MAAAA,CAAOG,MAAM,CAAC,SAAA,CAAA;AAE9C,IAAA,MAAM,EAAEC,MAAM,EAAE,GAAGF,UAAW,CAAA,OAAA,CAAA;IAC9B,MAAM,EAAEG,aAAa,EAAEC,kBAAkB,EAAE,GAAGJ,UAAAA,CAAW,YAAYK,KAAK;AAE1E,IAAA,MAAM,EAAEC,mBAAmB,EAAEC,WAAW,EAAE,GAAGL,MAAAA;AAE7C,IAAA,MAAMM,yBAAyB,CAACC,WAAAA,GAAAA;AAC9B,QAAA,MAAMC,gBAAgB,CAAC,MAAM,EAAEJ,mBAAAA,CAAoBG,aAAa,CAAC;AAEjE,QAAA,MAAME,YAAYX,UAAW,CAAA,WAAA,CAAA;QAE7B,MAAMY,kBAAAA,GAAqB,CAACC,MAAgBC,EAAAA,IAAAA,GAAAA;YAC1C,OAAOH,SAAAA,CAAUI,GAAG,CAAC;gBAAEC,eAAiB,EAAA;AAAE,oBAAA,CAACH,SAAS;AAAEC,wBAAAA;AAAK;AAAE;AAAE,aAAA,CAAA;AACjE,SAAA;AAEA,QAAA,MAAMG,kBAAkB,CAACJ,MAAAA,GAAAA;AACvB,YAAA,OAAOF,UAAUO,UAAU,CAACT,YAAYU,GAAG,CAAA,CAAEF,eAAe,CAACJ,MAAAA,CAAAA;AAC/D,SAAA;AAEA,QAAA,MAAMO,gBAAgBH,eAAgB,CAAA,MAAA,CAAA;AAEtC,QAAA,IAAIG,aAAe,EAAA;AACjBR,YAAAA,kBAAAA,CAAmBF,aAAe,EAAA;gBAAEW,KAAO,EAAA;AAAC,oBAAA,CAAC,EAAEZ,WAAAA,CAAYU,GAAG,CAAC,KAAK;AAAE;AAAC,aAAA,CAAA;AACzE;AAEA,QAAA,OAAOG,gBAAW,CAAA;YAChBC,IAAM,EAAA,OAAA;AAENC,YAAAA,UAAAA,CAAAA,CAAWC,CAAC,EAAA;AACV,gBAAA,IAAIL,aAAe,EAAA;AACjBM,oBAAAA,YAAAA,CAAaD,CAAGhB,EAAAA,WAAAA,CAAAA;AAClB;AACF;AACF,SAAA,CAAA;AACF,KAAA;IAEA,MAAMiB,YAAAA,GAAe,CACnBD,CACAhB,EAAAA,WAAAA,GAAAA;AAEA,QAAA,MAAMC,gBAAgBJ,mBAAoBG,CAAAA,WAAAA,CAAAA;AAC1C,QAAA,MAAMkB,WAAWpB,WAAYE,CAAAA,WAAAA,CAAAA;QAE7BgB,CAAEG,CAAAA,KAAK,CAAClB,aAAe,EAAA;YACrBa,IAAMI,EAAAA,QAAAA;YAENE,UAAY,EAAA;gBACV/B,MAAQ,EAAA;AACNW,oBAAAA;AACF;AACF,aAAA;AAEAqB,YAAAA,IAAAA,EAAM1B,kBAAmBK,CAAAA,WAAAA,CAAAA;AAEzB,YAAA,MAAMsB,OAAQC,CAAAA,CAAAA,MAAM,EAAEF,IAAI,EAAEG,GAAG,EAAA;gBAC7B,MAAMC,eAAAA,GAAkB/B,cAAc2B,IAAM,EAAA;AAAErB,oBAAAA;AAAY,iBAAA,CAAA;gBAE1D,MAAM,EAAE0B,SAAS,EAAE,GAAGnC,UAAAA,CAAW,YAC9BoC,GAAG,CAAC,aACJC,CAAAA,CAAAA,qBAAqB,CAAC;AAAE5B,oBAAAA;AAAY,iBAAA,CAAA;gBAEvC,OAAO0B,SAAAA,CAAUH,QAAQE,eAAiBD,EAAAA,GAAAA,CAAAA;AAC5C;AACF,SAAA,CAAA;AACF,KAAA;IAEA,OAAO;AAAEzB,QAAAA;AAAuB,KAAA;AAClC,CAAA;;;;"}