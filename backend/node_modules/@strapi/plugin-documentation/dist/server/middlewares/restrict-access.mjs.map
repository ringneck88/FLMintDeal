{"version":3,"file":"restrict-access.mjs","sources":["../../../server/src/middlewares/restrict-access.ts"],"sourcesContent":["import type Koa from 'koa';\nimport type {} from 'koa-session';\n\nimport type { Config } from '../types';\n\nexport default async (ctx: Koa.Context, next: Koa.Next) => {\n  const pluginStore = strapi.store({ type: 'plugin', name: 'documentation' });\n\n  const config = (await pluginStore.get({ key: 'config' })) as Config;\n\n  if (!config.restrictedAccess) {\n    return next();\n  }\n\n  if (!ctx.session || !ctx.session.documentation || !ctx.session.documentation.logged) {\n    const querystring = ctx.querystring ? `?${ctx.querystring}` : '';\n\n    return ctx.redirect(`${strapi.config.server.url}/documentation/login${querystring}`);\n  }\n\n  // Execute the action.\n  return next();\n};\n"],"names":["ctx","next","pluginStore","strapi","store","type","name","config","get","key","restrictedAccess","session","documentation","logged","querystring","redirect","server","url"],"mappings":"AAKA,qBAAe,CAAA,OAAOA,GAAkBC,EAAAA,IAAAA,GAAAA;IACtC,MAAMC,WAAAA,GAAcC,MAAOC,CAAAA,KAAK,CAAC;QAAEC,IAAM,EAAA,QAAA;QAAUC,IAAM,EAAA;AAAgB,KAAA,CAAA;AAEzE,IAAA,MAAMC,MAAU,GAAA,MAAML,WAAYM,CAAAA,GAAG,CAAC;QAAEC,GAAK,EAAA;AAAS,KAAA,CAAA;IAEtD,IAAI,CAACF,MAAOG,CAAAA,gBAAgB,EAAE;QAC5B,OAAOT,IAAAA,EAAAA;AACT;AAEA,IAAA,IAAI,CAACD,GAAIW,CAAAA,OAAO,IAAI,CAACX,IAAIW,OAAO,CAACC,aAAa,IAAI,CAACZ,GAAIW,CAAAA,OAAO,CAACC,aAAa,CAACC,MAAM,EAAE;QACnF,MAAMC,WAAAA,GAAcd,GAAIc,CAAAA,WAAW,GAAG,CAAC,CAAC,EAAEd,GAAIc,CAAAA,WAAW,CAAC,CAAC,GAAG,EAAA;AAE9D,QAAA,OAAOd,GAAIe,CAAAA,QAAQ,CAAC,CAAC,EAAEZ,MAAOI,CAAAA,MAAM,CAACS,MAAM,CAACC,GAAG,CAAC,oBAAoB,EAAEH,YAAY,CAAC,CAAA;AACrF;;IAGA,OAAOb,IAAAA,EAAAA;AACT,CAAA;;;;"}