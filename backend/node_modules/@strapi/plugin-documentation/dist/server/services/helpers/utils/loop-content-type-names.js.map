{"version":3,"file":"loop-content-type-names.js","sources":["../../../../../server/src/services/helpers/utils/loop-content-type-names.ts"],"sourcesContent":["import _ from 'lodash';\n\nimport type { Api, ApiInfo } from '../../../types';\n\n/**\n * @description A reusable loop for building api endpoint paths and component schemas\n */\nconst loopContentTypeNames = (api: Api, callback: (info: ApiInfo) => any) => {\n  let result = {};\n  for (const contentTypeName of api.ctNames) {\n    // Get the attributes found on the api's contentType\n    const uid = `${api.getter}::${api.name}.${contentTypeName}`;\n\n    const { attributes, info: contentTypeInfo, kind } = strapi.contentType(uid as any);\n\n    // Get the routes for the current api\n    const routeInfo =\n      api.getter === 'plugin'\n        ? // @ts-expect-error â€“ TODO: fix this\n          strapi.plugin(api.name).routes['content-api']\n        : strapi.api(api.name).routes[contentTypeName];\n\n    // Continue to next iteration if routeInfo is undefined\n    if (!routeInfo) {\n      continue;\n    }\n\n    // Uppercase the first letter of the api name\n    const apiName = _.upperFirst(api.name);\n\n    // Create a unique name if the api name and contentType name don't match\n    const uniqueName =\n      api.name === contentTypeName ? apiName : `${apiName} - ${_.upperFirst(contentTypeName)}`;\n\n    const apiInfo = {\n      ...api,\n      routeInfo,\n      attributes,\n      uniqueName,\n      contentTypeInfo,\n      kind,\n    };\n\n    result = {\n      ...result,\n      ...callback(apiInfo),\n    };\n  }\n\n  return result;\n};\n\nexport default loopContentTypeNames;\n"],"names":["loopContentTypeNames","api","callback","result","contentTypeName","ctNames","uid","getter","name","attributes","info","contentTypeInfo","kind","strapi","contentType","routeInfo","plugin","routes","apiName","_","upperFirst","uniqueName","apiInfo"],"mappings":";;;;AAIA;;IAGA,MAAMA,oBAAuB,GAAA,CAACC,GAAUC,EAAAA,QAAAA,GAAAA;AACtC,IAAA,IAAIC,SAAS,EAAC;AACd,IAAA,KAAK,MAAMC,eAAAA,IAAmBH,GAAII,CAAAA,OAAO,CAAE;;AAEzC,QAAA,MAAMC,GAAM,GAAA,CAAC,EAAEL,GAAAA,CAAIM,MAAM,CAAC,EAAE,EAAEN,GAAAA,CAAIO,IAAI,CAAC,CAAC,EAAEJ,gBAAgB,CAAC;QAE3D,MAAM,EAAEK,UAAU,EAAEC,IAAMC,EAAAA,eAAe,EAAEC,IAAI,EAAE,GAAGC,MAAOC,CAAAA,WAAW,CAACR,GAAAA,CAAAA;;QAGvE,MAAMS,SAAAA,GACJd,IAAIM,MAAM,KAAK,WAEXM,MAAOG,CAAAA,MAAM,CAACf,GAAAA,CAAIO,IAAI,CAAA,CAAES,MAAM,CAAC,aAAA,CAAc,GAC7CJ,MAAAA,CAAOZ,GAAG,CAACA,IAAIO,IAAI,CAAA,CAAES,MAAM,CAACb,eAAgB,CAAA;;AAGlD,QAAA,IAAI,CAACW,SAAW,EAAA;AACd,YAAA;AACF;;AAGA,QAAA,MAAMG,OAAUC,GAAAA,CAAAA,CAAEC,UAAU,CAACnB,IAAIO,IAAI,CAAA;;AAGrC,QAAA,MAAMa,UACJpB,GAAAA,GAAAA,CAAIO,IAAI,KAAKJ,kBAAkBc,OAAU,GAAA,CAAC,EAAEA,OAAAA,CAAQ,GAAG,EAAEC,CAAAA,CAAEC,UAAU,CAAChB,iBAAiB,CAAC;AAE1F,QAAA,MAAMkB,OAAU,GAAA;AACd,YAAA,GAAGrB,GAAG;AACNc,YAAAA,SAAAA;AACAN,YAAAA,UAAAA;AACAY,YAAAA,UAAAA;AACAV,YAAAA,eAAAA;AACAC,YAAAA;AACF,SAAA;QAEAT,MAAS,GAAA;AACP,YAAA,GAAGA,MAAM;AACT,YAAA,GAAGD,SAASoB,OAAQ;AACtB,SAAA;AACF;IAEA,OAAOnB,MAAAA;AACT;;;;"}