{"version":3,"file":"get-api-responses.mjs","sources":["../../../../../server/src/services/helpers/utils/get-api-responses.ts"],"sourcesContent":["import type { OpenAPIV3 } from 'openapi-types';\nimport pascalCase from './pascal-case';\n\ninterface Options {\n  uniqueName: string;\n  route: {\n    method: string;\n  };\n  isListOfEntities?: boolean;\n  isLocalizationPath?: boolean;\n}\n\n/**\n * @description - Builds the Swagger response object for a given api\n */\nconst getApiResponse = ({\n  uniqueName,\n  route,\n  isListOfEntities = false,\n}: Options): OpenAPIV3.ResponsesObject => {\n  const getSchema = (): OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject => {\n    if (route.method === 'DELETE') {\n      return {\n        type: 'integer',\n        format: 'int64',\n      };\n    }\n\n    if (isListOfEntities) {\n      return { $ref: `#/components/schemas/${pascalCase(uniqueName)}ListResponse` };\n    }\n\n    return { $ref: `#/components/schemas/${pascalCase(uniqueName)}Response` };\n  };\n\n  const schema = getSchema();\n\n  return {\n    200: {\n      description: 'OK',\n      content: {\n        'application/json': {\n          schema,\n        },\n      },\n    },\n    400: {\n      description: 'Bad Request',\n      content: {\n        'application/json': {\n          schema: {\n            $ref: '#/components/schemas/Error',\n          },\n        },\n      },\n    },\n    401: {\n      description: 'Unauthorized',\n      content: {\n        'application/json': {\n          schema: {\n            $ref: '#/components/schemas/Error',\n          },\n        },\n      },\n    },\n    403: {\n      description: 'Forbidden',\n      content: {\n        'application/json': {\n          schema: {\n            $ref: '#/components/schemas/Error',\n          },\n        },\n      },\n    },\n    404: {\n      description: 'Not Found',\n      content: {\n        'application/json': {\n          schema: {\n            $ref: '#/components/schemas/Error',\n          },\n        },\n      },\n    },\n    500: {\n      description: 'Internal Server Error',\n      content: {\n        'application/json': {\n          schema: {\n            $ref: '#/components/schemas/Error',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport default getApiResponse;\n"],"names":["getApiResponse","uniqueName","route","isListOfEntities","getSchema","method","type","format","$ref","pascalCase","schema","description","content"],"mappings":";;AAYA;;IAGA,MAAMA,cAAiB,GAAA,CAAC,EACtBC,UAAU,EACVC,KAAK,EACLC,gBAAmB,GAAA,KAAK,EAChB,GAAA;AACR,IAAA,MAAMC,SAAY,GAAA,IAAA;QAChB,IAAIF,KAAAA,CAAMG,MAAM,KAAK,QAAU,EAAA;YAC7B,OAAO;gBACLC,IAAM,EAAA,SAAA;gBACNC,MAAQ,EAAA;AACV,aAAA;AACF;AAEA,QAAA,IAAIJ,gBAAkB,EAAA;YACpB,OAAO;AAAEK,gBAAAA,IAAAA,EAAM,CAAC,qBAAqB,EAAEC,UAAWR,CAAAA,UAAAA,CAAAA,CAAY,YAAY;AAAE,aAAA;AAC9E;QAEA,OAAO;AAAEO,YAAAA,IAAAA,EAAM,CAAC,qBAAqB,EAAEC,UAAWR,CAAAA,UAAAA,CAAAA,CAAY,QAAQ;AAAE,SAAA;AAC1E,KAAA;AAEA,IAAA,MAAMS,MAASN,GAAAA,SAAAA,EAAAA;IAEf,OAAO;QACL,GAAK,EAAA;YACHO,WAAa,EAAA,IAAA;YACbC,OAAS,EAAA;gBACP,kBAAoB,EAAA;AAClBF,oBAAAA;AACF;AACF;AACF,SAAA;QACA,GAAK,EAAA;YACHC,WAAa,EAAA,aAAA;YACbC,OAAS,EAAA;gBACP,kBAAoB,EAAA;oBAClBF,MAAQ,EAAA;wBACNF,IAAM,EAAA;AACR;AACF;AACF;AACF,SAAA;QACA,GAAK,EAAA;YACHG,WAAa,EAAA,cAAA;YACbC,OAAS,EAAA;gBACP,kBAAoB,EAAA;oBAClBF,MAAQ,EAAA;wBACNF,IAAM,EAAA;AACR;AACF;AACF;AACF,SAAA;QACA,GAAK,EAAA;YACHG,WAAa,EAAA,WAAA;YACbC,OAAS,EAAA;gBACP,kBAAoB,EAAA;oBAClBF,MAAQ,EAAA;wBACNF,IAAM,EAAA;AACR;AACF;AACF;AACF,SAAA;QACA,GAAK,EAAA;YACHG,WAAa,EAAA,WAAA;YACbC,OAAS,EAAA;gBACP,kBAAoB,EAAA;oBAClBF,MAAQ,EAAA;wBACNF,IAAM,EAAA;AACR;AACF;AACF;AACF,SAAA;QACA,GAAK,EAAA;YACHG,WAAa,EAAA,uBAAA;YACbC,OAAS,EAAA;gBACP,kBAAoB,EAAA;oBAClBF,MAAQ,EAAA;wBACNF,IAAM,EAAA;AACR;AACF;AACF;AACF;AACF,KAAA;AACF;;;;"}