{"version":3,"file":"index.js","sources":["../../admin/src/index.ts"],"sourcesContent":["import { Information } from '@strapi/icons';\n\nimport { PERMISSIONS } from './constants';\nimport { pluginId } from './pluginId';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n  register(app: any) {\n    app.addMenuLink({\n      to: `plugins/${pluginId}`,\n      icon: Information,\n      intlLabel: {\n        id: `${pluginId}.plugin.name`,\n        defaultMessage: 'Documentation',\n      },\n      permissions: PERMISSIONS.main,\n      Component: async () => {\n        const { App } = await import('./pages/App');\n        return App;\n      },\n      position: 9,\n    });\n\n    app.registerPlugin({\n      id: pluginId,\n      name: pluginId,\n    });\n  },\n  bootstrap(app: any) {\n    app.addSettingsLink('global', {\n      intlLabel: {\n        id: `${pluginId}.plugin.name`,\n        defaultMessage: 'Documentation',\n      },\n      id: 'documentation',\n      to: pluginId,\n      Component: async () => {\n        const { SettingsPage } = await import('./pages/Settings');\n        return SettingsPage;\n      },\n      permissions: PERMISSIONS.main,\n    });\n  },\n  async registerTrads({ locales }: { locales: string[] }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, pluginId),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],"names":["register","app","addMenuLink","to","pluginId","icon","Information","intlLabel","id","defaultMessage","permissions","PERMISSIONS","main","Component","App","position","registerPlugin","name","bootstrap","addSettingsLink","SettingsPage","registerTrads","locales","importedTrads","Promise","all","map","locale","then","default","data","prefixPluginTranslations","catch","resolve"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA,YAAe;AACbA,IAAAA,QAAAA,CAAAA,CAASC,GAAQ,EAAA;AACfA,QAAAA,GAAAA,CAAIC,WAAW,CAAC;AACdC,YAAAA,EAAAA,EAAI,CAAC,QAAQ,EAAEC,iBAAAA,CAAS,CAAC;YACzBC,IAAMC,EAAAA,iBAAAA;YACNC,SAAW,EAAA;AACTC,gBAAAA,EAAAA,EAAI,CAAC,EAAEJ,iBAAS,CAAA,YAAY,CAAC;gBAC7BK,cAAgB,EAAA;AAClB,aAAA;AACAC,YAAAA,WAAAA,EAAaC,sBAAYC,IAAI;YAC7BC,SAAW,EAAA,UAAA;AACT,gBAAA,MAAM,EAAEC,GAAG,EAAE,GAAG,MAAM,oDAAO,gBAAA,KAAA;gBAC7B,OAAOA,GAAAA;AACT,aAAA;YACAC,QAAU,EAAA;AACZ,SAAA,CAAA;AAEAd,QAAAA,GAAAA,CAAIe,cAAc,CAAC;YACjBR,EAAIJ,EAAAA,iBAAAA;YACJa,IAAMb,EAAAA;AACR,SAAA,CAAA;AACF,KAAA;AACAc,IAAAA,SAAAA,CAAAA,CAAUjB,GAAQ,EAAA;QAChBA,GAAIkB,CAAAA,eAAe,CAAC,QAAU,EAAA;YAC5BZ,SAAW,EAAA;AACTC,gBAAAA,EAAAA,EAAI,CAAC,EAAEJ,iBAAS,CAAA,YAAY,CAAC;gBAC7BK,cAAgB,EAAA;AAClB,aAAA;YACAD,EAAI,EAAA,eAAA;YACJL,EAAIC,EAAAA,iBAAAA;YACJS,SAAW,EAAA,UAAA;AACT,gBAAA,MAAM,EAAEO,YAAY,EAAE,GAAG,MAAM,oDAAO,qBAAA,KAAA;gBACtC,OAAOA,YAAAA;AACT,aAAA;AACAV,YAAAA,WAAAA,EAAaC,sBAAYC;AAC3B,SAAA,CAAA;AACF,KAAA;IACA,MAAMS,aAAAA,CAAAA,CAAc,EAAEC,OAAO,EAAyB,EAAA;QACpD,MAAMC,aAAAA,GAAgB,MAAMC,OAAQC,CAAAA,GAAG,CACrCH,OAAQI,CAAAA,GAAG,CAAC,CAACC,MAAAA,GAAAA;AACX,YAAA,OAAO,iCAAM,CAAC,CAAC,eAAe,EAAEA,MAAO,CAAA,KAAK,CAAC,CAAA,CAC1CC,IAAI,CAAC,CAAC,EAAEC,OAAAA,EAASC,IAAI,EAAE,GAAA;gBACtB,OAAO;AACLA,oBAAAA,IAAAA,EAAMC,kDAAyBD,IAAM1B,EAAAA,iBAAAA,CAAAA;AACrCuB,oBAAAA;AACF,iBAAA;AACF,aAAA,CAAA,CACCK,KAAK,CAAC,IAAA;gBACL,OAAO;AACLF,oBAAAA,IAAAA,EAAM,EAAC;AACPH,oBAAAA;AACF,iBAAA;AACF,aAAA,CAAA;AACJ,SAAA,CAAA,CAAA;QAGF,OAAOH,OAAAA,CAAQS,OAAO,CAACV,aAAAA,CAAAA;AACzB;AACF,CAAE;;;;"}