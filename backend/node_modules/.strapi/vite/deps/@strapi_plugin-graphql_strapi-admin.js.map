{
  "version": 3,
  "sources": ["../../../@strapi/plugin-graphql/dist/admin/package.json.mjs", "../../../@strapi/plugin-graphql/admin/src/pluginId.ts", "../../../@strapi/plugin-graphql/admin/src/utils/prefixPluginTranslations.ts", "../../../@strapi/plugin-graphql/admin/src/index.ts"],
  "sourcesContent": ["var name = \"@strapi/plugin-graphql\";\nvar version = \"5.23.4\";\nvar description = \"Adds GraphQL endpoint with default API methods.\";\nvar repository = {\n    type: \"git\",\n    url: \"https://github.com/strapi/strapi.git\",\n    directory: \"packages/plugins/graphql\"\n};\nvar license = \"SEE LICENSE IN LICENSE\";\nvar author = {\n    name: \"Strapi Solutions SAS\",\n    email: \"hi@strapi.io\",\n    url: \"https://strapi.io\"\n};\nvar maintainers = [\n    {\n        name: \"Strapi Solutions SAS\",\n        email: \"hi@strapi.io\",\n        url: \"https://strapi.io\"\n    }\n];\nvar exports = {\n    \"./strapi-admin\": {\n        types: \"./dist/admin/src/index.d.ts\",\n        source: \"./admin/src/index.ts\",\n        \"import\": \"./dist/admin/index.mjs\",\n        require: \"./dist/admin/index.js\",\n        \"default\": \"./dist/admin/index.js\"\n    },\n    \"./strapi-server\": {\n        types: \"./dist/server/src/index.d.ts\",\n        source: \"./server/src/index.ts\",\n        \"import\": \"./dist/server/index.mjs\",\n        require: \"./dist/server/index.js\",\n        \"default\": \"./dist/server/index.js\"\n    },\n    \"./package.json\": \"./package.json\"\n};\nvar files = [\n    \"dist/\",\n    \"strapi-server.js\"\n];\nvar scripts = {\n    build: \"run -T npm-run-all clean --parallel build:code build:types\",\n    \"build:code\": \"run -T rollup -c\",\n    \"build:types\": \"run -T run-p build:types:server build:types:admin\",\n    \"build:types:server\": \"run -T tsc -p server/tsconfig.build.json --emitDeclarationOnly\",\n    \"build:types:admin\": \"run -T tsc -p admin/tsconfig.build.json --emitDeclarationOnly\",\n    clean: \"run -T rimraf ./dist\",\n    lint: \"run -T eslint .\",\n    \"test:unit\": \"run -T jest --passWithNoTests\",\n    \"test:unit:watch\": \"run -T jest --watch\",\n    watch: \"run -T rollup -c -w\"\n};\nvar dependencies = {\n    \"@apollo/server\": \"4.11.0\",\n    \"@as-integrations/koa\": \"1.1.1\",\n    \"@graphql-tools/schema\": \"10.0.3\",\n    \"@graphql-tools/utils\": \"^10.1.3\",\n    \"@koa/cors\": \"5.0.0\",\n    \"@strapi/design-system\": \"2.0.0-rc.29\",\n    \"@strapi/icons\": \"2.0.0-rc.29\",\n    \"@strapi/utils\": \"5.23.4\",\n    graphql: \"^16.8.1\",\n    \"graphql-depth-limit\": \"^1.1.0\",\n    \"graphql-playground-middleware-koa\": \"^1.6.21\",\n    \"graphql-scalars\": \"1.22.2\",\n    \"koa-bodyparser\": \"4.4.1\",\n    \"koa-compose\": \"^4.1.0\",\n    lodash: \"4.17.21\",\n    nexus: \"1.3.0\",\n    pluralize: \"8.0.0\"\n};\nvar devDependencies = {\n    \"@strapi/strapi\": \"5.23.4\",\n    \"@strapi/types\": \"5.23.4\",\n    \"@types/graphql-depth-limit\": \"1.1.5\",\n    \"@types/koa-bodyparser\": \"4.3.12\",\n    \"@types/koa__cors\": \"5.0.0\",\n    \"cross-env\": \"^7.0.3\",\n    \"eslint-config-custom\": \"5.23.4\",\n    koa: \"2.16.1\",\n    react: \"18.3.1\",\n    \"react-dom\": \"18.3.1\",\n    \"react-router-dom\": \"6.22.3\",\n    \"styled-components\": \"6.1.8\",\n    tsconfig: \"5.23.4\",\n    typescript: \"5.4.4\"\n};\nvar peerDependencies = {\n    \"@strapi/strapi\": \"^5.0.0\",\n    react: \"^17.0.0 || ^18.0.0\",\n    \"react-dom\": \"^17.0.0 || ^18.0.0\",\n    \"react-router-dom\": \"^6.0.0\",\n    \"styled-components\": \"^6.0.0\"\n};\nvar engines = {\n    node: \">=18.0.0 <=22.x.x\",\n    npm: \">=6.0.0\"\n};\nvar strapi = {\n    displayName: \"GraphQL\",\n    name: \"graphql\",\n    description: \"Adds GraphQL endpoint with default API methods.\",\n    kind: \"plugin\"\n};\nvar pluginPkg = {\n    name: name,\n    version: version,\n    description: description,\n    repository: repository,\n    license: license,\n    author: author,\n    maintainers: maintainers,\n    exports: exports,\n    files: files,\n    scripts: scripts,\n    dependencies: dependencies,\n    devDependencies: devDependencies,\n    peerDependencies: peerDependencies,\n    engines: engines,\n    strapi: strapi\n};\n\nexport { author, pluginPkg as default, dependencies, description, devDependencies, engines, exports, files, license, maintainers, name, peerDependencies, repository, scripts, strapi, version };\n//# sourceMappingURL=package.json.mjs.map\n", "export const pluginId = 'graphql';\n", "type TradOptions = Record<string, string>;\n\nconst prefixPluginTranslations = (trad: TradOptions, pluginId: string): TradOptions => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n  return Object.keys(trad).reduce((acc, current) => {\n    acc[`${pluginId}.${current}`] = trad[current];\n    return acc;\n  }, {} as TradOptions);\n};\n\nexport { prefixPluginTranslations };\n", "import pluginPkg from '../../package.json';\n\nimport { pluginId } from './pluginId';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\nconst name = pluginPkg.strapi.name;\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n  // TODO: we need to have the type for StrapiApp done from `@strapi/admin` package.\n  register(app: any) {\n    app.registerPlugin({\n      id: pluginId,\n      name,\n    });\n  },\n  bootstrap() {},\n  async registerTrads({ locales }: { locales: string[] }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, pluginId),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],
  "mappings": "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",
  "names": ["pluginId", "prefixPluginTranslations", "trad", "pluginId", "Object", "keys", "reduce", "acc", "current", "name", "pluginPkg", "strapi", "register", "app", "registerPlugin", "id", "pluginId", "bootstrap", "registerTrads", "locales", "importedTrads", "Promise", "all", "map", "locale", "then", "default", "data", "prefixPluginTranslations", "catch", "resolve"]
}
