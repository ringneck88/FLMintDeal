{
  "version": 3,
  "sources": ["../../../strapi-plugin-superfields/admin/components/enumerationSelect.jsx"],
  "sourcesContent": ["import React from \"react\";\r\nimport {\r\n  SingleSelect,\r\n  SingleSelectOption as Option,\r\n  Tooltip,\r\n  Field,\r\n  lightTheme,\r\n  darkTheme,\r\n  DesignSystemProvider,\r\n} from \"@strapi/design-system\";\r\nimport { Information } from \"@strapi/icons\";\r\nimport { useSystemTheme } from \"../hooks/use-system-theme\";\r\n\r\nconst CustomEnumField = React.forwardRef(({\r\n  name,\r\n  value,\r\n  onChange,\r\n  attribute,\r\n  error,\r\n  required,\r\n}, ref) => {\r\n  const systemTheme = useSystemTheme();\r\n  const theme = systemTheme === \"dark\" ? darkTheme : lightTheme;\r\n\r\n  const tooltipContent = attribute?.options[\"tooltip-content\"] ?? \"\";\r\n  const description = attribute?.options[\"description\"] ?? \"\";\r\n  const defaultValue = attribute?.options[\"default\"] ?? \"\";\r\n\r\n\r\n  let lines = [];\r\n  if (attribute.options?.enumValues) {\r\n    lines = attribute.options.enumValues\r\n      .split(\"\\n\")\r\n      .map((line) => line.trim())\r\n      .filter(Boolean);\r\n  }\r\n\r\n  const normalizedOptions = lines.map((item) => ({\r\n    value: item,\r\n    label: item,\r\n  }));\r\n\r\n\r\n\r\n  return (\r\n    <Field.Root id={name} hint={description} error={error} ref={ref}>\r\n      <Field.Label style={{ marginBottom: \"5px\" }}>{name}</Field.Label>\r\n\r\n      <SingleSelect\r\n        name={name}\r\n        error={error}\r\n        value={value}\r\n        required={required}\r\n        defaultValue={defaultValue}\r\n        onChange={(val) =>\r\n          onChange({ target: { name, value: val, type: \"string\" } })\r\n        }\r\n        startIcon={\r\n            <DesignSystemProvider theme={theme}>\r\n              <Tooltip label={tooltipContent ?? \"\"}>\r\n                <Information\r\n                  aria-hidden\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    color: systemTheme === \"dark\" ? \"#fff\" : \"#000\",\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n            </DesignSystemProvider>\r\n        }\r\n      >\r\n        {normalizedOptions.map((opt, idx) => (\r\n          <Option key={idx} value={opt.value}>\r\n            {opt.label}\r\n          </Option>\r\n        ))}\r\n      </SingleSelect>\r\n\r\n      <Field.Error />\r\n      <Field.Hint />\r\n    </Field.Root>\r\n  );\r\n});\r\n\r\nexport default CustomEnumField;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAkB;AA6Cd;AAhCJ,IAAM,kBAAkB,aAAAA,QAAM,WAAW,CAAC;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG,QAAQ;AApBX;AAqBE,QAAM,cAAc,eAAe;AACnC,QAAM,QAAQ,gBAAgB,SAAS,YAAY;AAEnD,QAAM,kBAAiB,uCAAW,QAAQ,uBAAsB;AAChE,QAAM,eAAc,uCAAW,QAAQ,mBAAkB;AACzD,QAAM,gBAAe,uCAAW,QAAQ,eAAc;AAGtD,MAAI,QAAQ,CAAC;AACb,OAAI,eAAU,YAAV,mBAAmB,YAAY;AACjC,YAAQ,UAAU,QAAQ,WACvB,MAAM,IAAI,EACV,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,EACzB,OAAO,OAAO;AAAA,EACnB;AAEA,QAAM,oBAAoB,MAAM,IAAI,CAAC,UAAU;AAAA,IAC7C,OAAO;AAAA,IACP,OAAO;AAAA,EACT,EAAE;AAIF,aACE,yBAAC,MAAM,MAAN,EAAW,IAAI,MAAM,MAAM,aAAa,OAAc,KACrD;AAAA,gCAAC,MAAM,OAAN,EAAY,OAAO,EAAE,cAAc,MAAM,GAAI,gBAAK;AAAA,QAEnD;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAU,CAAC,QACT,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,KAAK,MAAM,SAAS,EAAE,CAAC;AAAA,QAE3D,eACI,wBAAC,wBAAqB,OACpB,sCAAC,eAAQ,OAAO,kBAAkB,IAChC;AAAA,UAAC;AAAA;AAAA,YACC,eAAW;AAAA,YACX,OAAO;AAAA,cACL,QAAQ;AAAA,cACR,OAAO,gBAAgB,SAAS,SAAS;AAAA,YAC3C;AAAA;AAAA,QACF,GACF,GACF;AAAA,QAGH,4BAAkB,IAAI,CAAC,KAAK,YAC3B,wBAAC,sBAAiB,OAAO,IAAI,OAC1B,cAAI,SADM,GAEb,CACD;AAAA;AAAA,IACH;AAAA,QAEA,wBAAC,MAAM,OAAN,EAAY;AAAA,QACb,wBAAC,MAAM,MAAN,EAAW;AAAA,KACd;AAEJ,CAAC;AAED,IAAO,4BAAQ;",
  "names": ["React"]
}
