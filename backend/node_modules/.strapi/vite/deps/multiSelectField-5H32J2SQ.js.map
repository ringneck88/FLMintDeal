{
  "version": 3,
  "sources": ["../../../strapi-plugin-superfields/admin/components/multiSelectField.jsx", "../../../strapi-plugin-superfields/admin/helpers/index.jsx"],
  "sourcesContent": ["import React, { useState } from 'react';\r\nimport {\r\n  DesignSystemProvider,\r\n  Field,\r\n MultiSelectNested,\r\n  Tooltip,\r\n  darkTheme,\r\n  lightTheme\r\n} from '@strapi/design-system';                                 \r\nimport { Information } from '@strapi/icons';\r\nimport { renderSelect } from '../helpers';\r\nimport { useSystemTheme } from '../hooks/use-system-theme';\r\n\r\nconst MultiSelectField = ({\r\n  name,\r\n  value,\r\n  onChange,\r\n  attribute,\r\n  error,\r\n  required,\r\n}) => {\r\n\r\n  const systemTheme = useSystemTheme();\r\n  const theme = systemTheme === \"dark\" ? darkTheme : lightTheme;\r\n\r\n \r\n  const {\r\n    'tooltip-content': tooltipContent = '',\r\n    description = '',\r\n    default: defaultValue = [],\r\n    nestedOptions = '[]',\r\n    selectType = 'multi',\r\n    enumValues = '',\r\n  } = attribute.options || {};\r\n\r\n  // parse flat enumValues (for non-nested)\r\n  const options =\r\n  enumValues\r\n    .map((item) => {\r\n      const [label, val] = item?.split(\":\").map((s) => s.trim());\r\n      return { label: label || val, value: val || label };\r\n    });\r\n\r\n  // parse nestedOptions only when needed\r\n  let tree = [];\r\n  if (selectType === 'nested') {\r\n    try {\r\n      tree = JSON.parse(nestedOptions);\r\n    } catch (e) {\r\n      console.warn('Invalid nestedOptions JSON', e);\r\n      tree = [];\r\n    }\r\n  }\r\n\r\n  // maintain selected values\r\n  const [selected, setSelected] = useState(\r\n    Array.isArray(value) && value.length ? value : defaultValue\r\n  );\r\n\r\n  const handleChange = (next) => {\r\n    setSelected(next);\r\n    // Strapi expects { target: { name, value, type } }\r\n    onChange({ target: { name, value: next, type: 'string' } });\r\n  };\r\n\r\n  // build the tooltip icon\r\n  const labelAction = tooltipContent && (\r\n    <DesignSystemProvider theme={theme}>\r\n    <Tooltip label={tooltipContent ?? \"\"}>\r\n      <Information\r\n        aria-hidden\r\n        style={{\r\n          cursor: \"pointer\",\r\n          color: systemTheme === \"dark\" ? \"#fff\" : \"#000\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  </DesignSystemProvider>\r\n  );\r\n\r\n\r\n  return (\r\n    <Field.Root id={name} hint={description} error={error}>\r\n      <Field.Label style={{ marginBottom: '5px' }} >{name}</Field.Label>\r\n\r\n        {selectType === 'nested' ? (\r\n          <MultiSelectNested\r\n            id={name}\r\n            name={name}\r\n            value={selected}\r\n            options={tree}\r\n            onChange={handleChange}\r\n            hint={description}\r\n            error={error}\r\n            required={required}\r\n            clearLabel=\"Clear all selections\"\r\n            startIcon={labelAction}\r\n            withTags={true}\r\n\r\n          />\r\n        ) : (\r\n          // fallback to flat selects (SingleSelect / MultiSelect / Combobox)\r\n          renderSelect(\r\n            { name, value: selected, onChange: handleChange, hint: description, required, error , id:name, withTags:true, startIcon: labelAction },\r\n            selectType,\r\n            options,\r\n            tooltipContent\r\n          )\r\n        )}\r\n\r\n    </Field.Root>\r\n  );\r\n}\r\n\r\nexport default MultiSelectField;\r\n", "import {\r\n  SingleSelect,\r\n  SingleSelectOption,\r\n  MultiSelect,\r\n  MultiSelectOption,\r\n  Combobox,\r\n  ComboboxOption,\r\n} from \"@strapi/design-system\";\r\n\r\n\r\nexport const renderSelect = (sharedProps, selectType, options, tooltipContent) => {\r\n\r\n\r\n  const commonProps = { ...sharedProps };\r\n\r\n\r\n  switch (selectType) {\r\n    case \"single\":\r\n      return (\r\n        <SingleSelect {...commonProps}>\r\n          {options.map((opt, i) => (\r\n            <SingleSelectOption key={i} value={opt.value}>\r\n              {opt.label}\r\n            </SingleSelectOption>\r\n          ))}\r\n        </SingleSelect>\r\n      );\r\n\r\n    case \"multi\":\r\n      return (\r\n        <MultiSelect {...commonProps}>\r\n          {options.map((opt, i) => (\r\n            <MultiSelectOption key={i} value={opt.value}>\r\n              {opt.label}\r\n            </MultiSelectOption>\r\n          ))}\r\n        </MultiSelect>\r\n      );\r\n\r\n    case \"combobox\":\r\n      return (\r\n        <Combobox {...commonProps}>\r\n          {options.map((opt, i) => (\r\n            <ComboboxOption key={i} value={opt.value}>\r\n              {opt.label}\r\n            </ComboboxOption>\r\n          ))}\r\n        </Combobox>\r\n      );\r\n\r\n    case \"nested\":\r\n      // Placeholder: actual nested UI is built in the main component\r\n      return null;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime"]
}
