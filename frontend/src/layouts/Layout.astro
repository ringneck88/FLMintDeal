---
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Your deals website powered by Kelly" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      // Prevent flash of wrong theme
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
          document.documentElement.classList.add('dark');
        }
      })();
    </script>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors">
    <header class="bg-white dark:bg-gray-800 shadow-lg dark:shadow-gray-700">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
            <a href="/" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">Mint Dosage Guide</a>
          </h1>
          
          <div class="flex items-center space-x-4">
            <nav class="hidden md:flex space-x-8">
              <a href="/" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Dosage Guide
              </a>
              <a href="#dosage-forms" class="text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Dosage Forms
              </a>
              <a href="#products" class="text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Products
              </a>
            </nav>
            
            <!-- Theme Toggle Button -->
            <button id="theme-toggle" class="p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
              <svg id="theme-toggle-dark-icon" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
              </svg>
              <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
              </svg>
            </button>
          </div>

          <!-- Mobile menu button -->
          <div class="md:hidden">
            <button id="mobile-menu-button" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 focus:outline-none">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Mobile menu -->
        <div id="mobile-menu" class="md:hidden hidden border-t border-gray-200 dark:border-gray-600 pt-4 pb-3">
          <a href="/" class="block px-3 py-2 text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 text-sm font-medium">
            Dosage Guide
          </a>
          <a href="#dosage-forms" class="block px-3 py-2 text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 text-sm font-medium">
            Dosage Forms
          </a>
          <a href="#products" class="block px-3 py-2 text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 text-sm font-medium">
            Products
          </a>
        </div>
      </div>
    </header>
    
    <main>
      <slot />
    </main>


    <script>
      document.addEventListener('DOMContentLoaded', function() {
        console.log('Theme toggle script loaded');
        
        // Theme toggle functionality
        function toggleTheme() {
          console.log('Toggle theme clicked');
          const html = document.documentElement;
          const isDark = html.classList.contains('dark');
          
          if (isDark) {
            html.classList.remove('dark');
            localStorage.setItem('theme', 'light');
            console.log('Switched to light mode');
          } else {
            html.classList.add('dark');
            localStorage.setItem('theme', 'dark');
            console.log('Switched to dark mode');
          }
          
          // Update button icons
          updateIcons();
        }
        
        function updateIcons() {
          const isDark = document.documentElement.classList.contains('dark');
          const lightIcon = document.getElementById('theme-toggle-light-icon');
          const darkIcon = document.getElementById('theme-toggle-dark-icon');
          
          if (isDark) {
            lightIcon?.classList.remove('hidden');
            darkIcon?.classList.add('hidden');
          } else {
            lightIcon?.classList.add('hidden');
            darkIcon?.classList.remove('hidden');
          }
        }
        
        // Initialize theme
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
          document.documentElement.classList.add('dark');
        }
        updateIcons();
        
        // Add event listener
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
          themeToggle.addEventListener('click', toggleTheme);
          console.log('Theme toggle button found and listener added');
        } else {
          console.log('Theme toggle button NOT found');
        }
        
        // Mobile menu functionality
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');

        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener('click', function() {
            mobileMenu.classList.toggle('hidden');
          });
        }
      });
    </script>
  </body>
</html>